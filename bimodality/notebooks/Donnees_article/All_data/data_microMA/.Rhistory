legend("bottomright", legend = c("WT", "MutH", "MutT", "MF1", "pMQ"), col=1:5, lty=1)
plot(x=survival_WT$Time,
y=survival_WT$Survival_noEscape,
type="l",
col=1,
xlab = "Time (hr)",
ylab="Survival %",
ylim = c(0,1),
main = "Survival of the 5 lines over time, no escape")
lines(x=survival_MutH$Time, y=survival_MutH$Survival_noEscape, col=2)
lines(x=survival_MutT$Time, y=survival_MutT$Survival_noEscape, col=3)
lines(x=survival_MF1$Time, y=survival_MF1$Survival_noEscape, col=4)
lines(x=survival_pMQ$Time, y=survival_pMQ$Survival_noEscape, col=5)
legend("bottomright", legend = c("WT", "MutH", "MutT", "MF1", "pMQ"), col=1:5, lty=1)
plot(x=survival_WT$Time,
y=survival_WT$Survival_noEscape/survival_WT$Survival_noEscape,
type="l",
col=1,
xlab = "Time (hr)",
ylab="Survival % (log-scale)",
ylim = c(0,1),
main = "Survival of the 5 lines over time, no escape, no senescence")
lines(x=survival_MutH$Time, y=survival_MutH$Survival_noEscape/survival_WT$Survival_noEscape[1:length(survival_MutH$Survival_noEscape)], col=2)
lines(x=survival_MutT$Time, y=survival_MutT$Survival_noEscape/survival_WT$Survival_noEscape[1:length(survival_MutT$Survival_noEscape)], col=3)
lines(x=survival_MF1$Time, y=survival_MF1$Survival_noEscape/survival_WT$Survival_noEscape[1:length(survival_MF1$Survival_noEscape)], col=4)
lines(x=survival_pMQ$Time, y=survival_pMQ$Survival_noEscape/survival_WT$Survival_noEscape[1:length(survival_pMQ$Survival_noEscape)], col=5)
legend("bottomright", legend = c("WT", "MutH", "MutT", "MF1", "pMQ"), col=1:5, lty=1)
plot(x=survival_WT$Time,
y=survival_WT$Survival,
type="l",
col=1,
xlab = "Time (hr)",
ylab="Survival % (log-scale)",
ylim = c(0.1,1),
log = "y",
main = "Log-survival of the 5 lines over time")
lines(x=survival_MutH$Time, y=survival_MutH$Survival, col=2)
lines(x=survival_MutT$Time, y=survival_MutT$Survival, col=3)
lines(x=survival_MF1$Time, y=survival_MF1$Survival, col=4)
lines(x=survival_pMQ$Time, y=survival_pMQ$Survival, col=5)
legend("bottomright", legend = c("WT", "MutH", "MutT", "MF1", "pMQ"), col=1:5, lty=1)
plot(x=survival_WT$Time,
y=survival_WT$Survival_noEscape,
type="l",
col=1,
xlab = "Time (hr)",
ylab="Survival % (log-scale)",
ylim = c(0.1,1),
log="y",
main = "Log-survival of the 5 lines over time, no escape")
lines(x=survival_MutH$Time, y=survival_MutH$Survival_noEscape, col=2)
lines(x=survival_MutT$Time, y=survival_MutT$Survival_noEscape, col=3)
lines(x=survival_MF1$Time, y=survival_MF1$Survival_noEscape, col=4)
lines(x=survival_pMQ$Time, y=survival_pMQ$Survival_noEscape, col=5)
legend("bottomright", legend = c("WT", "MutH", "MutT", "MF1", "pMQ"), col=1:5, lty=1)
plot(x=survival_WT$Time,
y=survival_WT$Survival_noEscape/survival_WT$Survival_noEscape,
type="l",
col=1,
xlab = "Time (hr)",
ylab="Survival % (log-scale)",
ylim = c(0.1,1),
log="y",
main = "Log-survival of the 5 lines over time, no escape, no senescence")
lines(x=survival_MutH$Time, y=survival_MutH$Survival_noEscape/survival_WT$Survival_noEscape[1:length(survival_MutH$Survival_noEscape)], col=2)
lines(x=survival_MutT$Time, y=survival_MutT$Survival_noEscape/survival_WT$Survival_noEscape[1:length(survival_MutT$Survival_noEscape)], col=3)
lines(x=survival_MF1$Time, y=survival_MF1$Survival_noEscape/survival_WT$Survival_noEscape[1:length(survival_MF1$Survival_noEscape)], col=4)
lines(x=survival_pMQ$Time, y=survival_pMQ$Survival_noEscape/survival_WT$Survival_noEscape[1:length(survival_pMQ$Survival_noEscape)], col=5)
legend("bottomright", legend = c("WT", "MutH", "MutT", "MF1", "pMQ"), col=1:5, lty=1)
ggplot(mortality_WT, aes(x=Final.frame, fill=Final.state)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of final states through the experiment : WT")
ggplot(mortality_MutT, aes(x=Final.frame, fill=Final.state)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of final states through the experiment : MutT")
ggplot(mortality_MF1, aes(x=Final.frame, fill=Final.state)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of final states through the experiment : MF1")
ggplot(mortality_pMQ, aes(x=Final.frame, fill=Final.state)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of final states through the experiment : pMQ")
ggplot(mortality_WT, aes(x=Final.frame, fill=Final.state)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of final states through the experiment : WT")
ggplot(mortality_MutT, aes(x=Final.frame, fill=Final.state)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of final states through the experiment : MutT")
ggplot(mortality_MF1, aes(x=Final.frame, fill=Final.state)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of final states through the experiment : MF1")
ggplot(mortality_pMQ, aes(x=Final.frame, fill=Final.state)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of final states through the experiment : pMQ")
ggplot(mortality_WT, aes(x=Final.frame, fill=Final.state)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of final states through the experiment : WT")
ggplot(mortality_MutT, aes(x=Final.frame, fill=Final.state)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of final states through the experiment : MutT")
ggplot(mortality_MF1, aes(x=Final.frame, fill=Final.state)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of final states through the experiment : MF1")
ggplot(mortality_pMQ, aes(x=Final.frame, fill=Final.state)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of final states through the experiment : pMQ")
ggplot(mortality_WT, aes(x=Final.frame, fill=Final.state)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of final states through the experiment : WT")
ggplot(mortality_MutT, aes(x=Final.frame, fill=Final.state)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of final states through the experiment : MutT")
ggplot(mortality_MF1, aes(x=Final.frame, fill=Final.state)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of final states through the experiment : MF1")
ggplot(mortality_pMQ, aes(x=Final.frame, fill=Final.state)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of final states through the experiment : pMQ")
ggplot(mortality_WT, aes(x=Final.frame, fill=Final.state)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of final states through the experiment : WT")
ggplot(mortality_MutT, aes(x=Final.frame, fill=Final.state)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of final states through the experiment : MutT")
ggplot(mortality_MF1, aes(x=Final.frame, fill=Final.state)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of final states through the experiment : MF1")
ggplot(mortality_pMQ, aes(x=Final.frame, fill=Final.state)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of final states through the experiment : pMQ")
ggplot(mortality_WT, aes(x=Final.frame, fill=Final.state)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of final states through the experiment : WT")
ggplot(mortality_MutT, aes(x=Final.frame, fill=Final.state)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of final states through the experiment : MutT")
ggplot(mortality_MF1, aes(x=Final.frame, fill=Final.state)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of final states through the experiment : MF1")
ggplot(mortality_pMQ, aes(x=Final.frame, fill=Final.state)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of final states through the experiment : pMQ")
ggplot(mortality_WT, aes(x=Final.frame, fill=Final.state)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of final states through the experiment : WT")
ggplot(mortality_MutT, aes(x=Final.frame, fill=Final.state)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of final states through the experiment : MutT")
ggplot(mortality_MF1, aes(x=Final.frame, fill=Final.state)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of final states through the experiment : MF1")
ggplot(mortality_pMQ, aes(x=Final.frame, fill=Final.state)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of final states through the experiment : pMQ")
ggplot(mortality_WT, aes(x=Final.frame, fill=Final.state)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of final states through the experiment : WT")
ggplot(mortality_MutT, aes(x=Final.frame, fill=Final.state)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of final states through the experiment : MutT")
ggplot(mortality_MF1, aes(x=Final.frame, fill=Final.state)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of final states through the experiment : MF1")
ggplot(mortality_pMQ, aes(x=Final.frame, fill=Final.state)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of final states through the experiment : pMQ")
ggplot(mortality_WT, aes(x=Final.frame, fill=Final.state)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of final states through the experiment : WT")
ggplot(mortality_MutT, aes(x=Final.frame, fill=Final.state)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of final states through the experiment : MutT")
ggplot(mortality_MF1, aes(x=Final.frame, fill=Final.state)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of final states through the experiment : MF1")
ggplot(mortality_pMQ, aes(x=Final.frame, fill=Final.state)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of final states through the experiment : pMQ")
ggplot(mortality_MutH, aes(x=Final.frame, fill=Final.state))+
geom_histogram(bins = 30) +
ggtitle("Distribution of final states through the experiment : MutH")
par(mfrow = c(2,5))
for (n in 1:10){
E_nt <- rowSums(sapply(1:n, log_choose, n=n, moments_expectations=moments_expectations_MutH))
plot(x = microMA_MutH$time/60,
y = E_nt,
xlab = "Time (hr)",
col = "cyan",
main = paste("E_", n, "(t)", sep = ""))
E_nt <- rowSums(sapply(1:n, log_choose, n=n, moments_expectations=moments_expectations_WT))
points(x = microMA_WT$time/60,
y = E_nt,
xlab = "Time (hr)",
col = "blue",
main = paste("E_", n, "(t)", sep = ""))
legend("topleft", legend = c("WT", "MutH"), col=c("blue", "cyan"), lty=1)
}
par(mfrow = c(2,5))
for (n in 1:10){
E_nt <- rowSums(sapply(1:n, log_choose, n=n, moments_expectations=moments_expectations_MutH))
plot(x = microMA_MutH$time/60,
y = E_nt,
xlab = "Time (hr)",
col = "cyan",
main = paste("E_", n, "(t)", sep = ""))
E_nt <- rowSums(sapply(1:n, log_choose, n=n, moments_expectations=moments_expectations_WT))
points(x = microMA_WT$time/60,
y = E_nt,
xlab = "Time (hr)",
col = "blue",
main = paste("E_", n, "(t)", sep = ""))
legend("topleft", legend = c("WT", "MutH"), col=c("blue", "cyan"), lty=1)
}
par(mfrow = c(2,5))
for (n in 1:10){
E_nt <- rowSums(sapply(1:n, log_choose, n=n, moments_expectations=moments_expectations_MutH))
plot(x = head(microMA_MutH$time/60, 600),
y = head(E_nt, 600),
xlab = "Time (hr)",
col = "cyan",
main = paste("E_", n, "(t)", sep = ""))
E_nt <- rowSums(sapply(1:n, log_choose, n=n, moments_expectations=moments_expectations_WT))
points(x = head(microMA_WT$time/60, 600),
y = head(E_nt, 600),
xlab = "Time (hr)",
col = "blue",
main = paste("E_", n, "(t)", sep = ""))
legend("topleft", legend = c("WT", "MutH"), col=c("blue", "cyan"), lty=1)
}
dim(mortality_pMQ_NA)
dim(mortality_MutH_NA)
dim(mortality_WT_NA)
dim(mortality_WT)
par(mfrow=c(2,3))
plot(x=survival_WT$Time,
y=survival_WT$Survival,
type="l",
col=1,
xlab = "Time (hr)",
ylab="Survival %",
ylim = c(0,1),
main = "Survival of the 5 lines over time")
lines(x=survival_MutH$Time, y=survival_MutH$Survival, col=2)
lines(x=survival_MutT$Time, y=survival_MutT$Survival, col=3)
lines(x=survival_MF1$Time, y=survival_MF1$Survival, col=4)
lines(x=survival_pMQ$Time, y=survival_pMQ$Survival, col=5)
legend("bottomright", legend = c("WT", "MutH", "MutT", "MF1", "pMQ"), col=1:5, lty=1)
plot(x=survival_WT$Time,
y=survival_WT$Survival_noEscape,
type="l",
col=1,
xlab = "Time (hr)",
ylab="Survival %",
ylim = c(0,1),
main = "Survival of the 5 lines over time, no escape")
lines(x=survival_MutH$Time, y=survival_MutH$Survival_noEscape, col=2)
lines(x=survival_MutT$Time, y=survival_MutT$Survival_noEscape, col=3)
lines(x=survival_MF1$Time, y=survival_MF1$Survival_noEscape, col=4)
lines(x=survival_pMQ$Time, y=survival_pMQ$Survival_noEscape, col=5)
legend("bottomright", legend = c("WT", "MutH", "MutT", "MF1", "pMQ"), col=1:5, lty=1)
plot(x=survival_WT$Time,
y=survival_WT$Survival_noEscape/survival_WT$Survival_noEscape,
type="l",
col=1,
xlab = "Time (hr)",
ylab="Survival %",
ylim = c(0,1),
main = "Survival of the 5 lines over time, no escape, no senescence")
lines(x=survival_MutH$Time, y=survival_MutH$Survival_noEscape/survival_WT$Survival_noEscape[1:length(survival_MutH$Survival_noEscape)], col=2)
lines(x=survival_MutT$Time, y=survival_MutT$Survival_noEscape/survival_WT$Survival_noEscape[1:length(survival_MutT$Survival_noEscape)], col=3)
lines(x=survival_MF1$Time, y=survival_MF1$Survival_noEscape/survival_WT$Survival_noEscape[1:length(survival_MF1$Survival_noEscape)], col=4)
lines(x=survival_pMQ$Time, y=survival_pMQ$Survival_noEscape/survival_WT$Survival_noEscape[1:length(survival_pMQ$Survival_noEscape)], col=5)
legend("bottomright", legend = c("WT", "MutH", "MutT", "MF1", "pMQ"), col=1:5, lty=1)
plot(x=survival_WT$Time,
y=survival_WT$Survival,
type="l",
col=1,
xlab = "Time (hr)",
ylab="Survival % (log-scale)",
ylim = c(0.1,1),
log = "y",
main = "Log-survival of the 5 lines over time")
lines(x=survival_MutH$Time, y=survival_MutH$Survival, col=2)
lines(x=survival_MutT$Time, y=survival_MutT$Survival, col=3)
lines(x=survival_MF1$Time, y=survival_MF1$Survival, col=4)
lines(x=survival_pMQ$Time, y=survival_pMQ$Survival, col=5)
legend("bottomright", legend = c("WT", "MutH", "MutT", "MF1", "pMQ"), col=1:5, lty=1)
plot(x=survival_WT$Time,
y=survival_WT$Survival_noEscape,
type="l",
col=1,
xlab = "Time (hr)",
ylab="Survival % (log-scale)",
ylim = c(0.1,1),
log="y",
main = "Log-survival of the 5 lines over time, no escape")
lines(x=survival_MutH$Time, y=survival_MutH$Survival_noEscape, col=2)
lines(x=survival_MutT$Time, y=survival_MutT$Survival_noEscape, col=3)
lines(x=survival_MF1$Time, y=survival_MF1$Survival_noEscape, col=4)
lines(x=survival_pMQ$Time, y=survival_pMQ$Survival_noEscape, col=5)
legend("bottomright", legend = c("WT", "MutH", "MutT", "MF1", "pMQ"), col=1:5, lty=1)
plot(x=survival_WT$Time,
y=survival_WT$Survival_noEscape/survival_WT$Survival_noEscape,
type="l",
col=1,
xlab = "Time (hr)",
ylab="Survival % (log-scale)",
ylim = c(0.1,1),
log="y",
main = "Log-survival of the 5 lines over time, no escape, no senescence")
lines(x=survival_MutH$Time, y=survival_MutH$Survival_noEscape/survival_WT$Survival_noEscape[1:length(survival_MutH$Survival_noEscape)], col=2)
lines(x=survival_MutT$Time, y=survival_MutT$Survival_noEscape/survival_WT$Survival_noEscape[1:length(survival_MutT$Survival_noEscape)], col=3)
lines(x=survival_MF1$Time, y=survival_MF1$Survival_noEscape/survival_WT$Survival_noEscape[1:length(survival_MF1$Survival_noEscape)], col=4)
lines(x=survival_pMQ$Time, y=survival_pMQ$Survival_noEscape/survival_WT$Survival_noEscape[1:length(survival_pMQ$Survival_noEscape)], col=5)
legend("bottomright", legend = c("WT", "MutH", "MutT", "MF1", "pMQ"), col=1:5, lty=1)
par(mfrow = c(5,2))
for (n in 1:10){
E_nt <- rowSums(sapply(1:n, log_choose, n=n, moments_expectations=moments_expectations_MutH))
plot(x = head(microMA_MutH$time/60, 600),
y = head(E_nt, 600),
xlab = "Time (hr)",
col = "cyan",
main = paste("E_", n, "(t)", sep = ""))
E_nt <- rowSums(sapply(1:n, log_choose, n=n, moments_expectations=moments_expectations_WT))
points(x = head(microMA_WT$time/60, 600),
y = head(E_nt, 600),
xlab = "Time (hr)",
col = "blue",
main = paste("E_", n, "(t)", sep = ""))
legend("topleft", legend = c("WT", "MutH"), col=c("blue", "cyan"), lty=1)
}
plot(moments_expectations_MutH[1,])
plot(moments_expectations_MutH[,1])
hist(microMA_MutH_growthRates[1,])
microMA_MutH_growthRates
hist(microMA_MutH_growthRates[3,])
hist(as.numeric(microMA_MutH_growthRates[3,]))
hist(as.numeric(microMA_MutH_growthRates[3,]), breaks=20)
hist(as.numeric(microMA_MutH_growthRates[3,]), breaks=30)
dim(x = microMA_MutH_growthRates)
dim(microMA_MutH)
microMA_MutH_growthRates <- microMA_MutH[seq(3, dim(microMA_MutH)[2], 3)]
moment_expectation <- function(k, dataset){
return (rowMeans(dataset**k, na.rm = T))
}
k_values <- 1:10
moments_expectations_MutH <- data.frame(sapply(k_values, moment_expectation, dataset=microMA_MutH_growthRates))
names(moments_expectations_MutH) <- paste("k.", k_values, sep = "")
head(moments_expectations_MutH)
hist(as.numeric(microMA_MutH_growthRates[3,]), breaks=30)
hist(as.numeric(microMA_MutH_growthRates[3,]), breaks=50)
dim(microMA_MutH_growthRates)
log_choose <- function(k, n, moments_expectations){
return ((-1)**k*choose(n,k)*log(moments_expectations[,k]))
}
par(mfrow = c(2,5))
for (n in 1:10){
E_nt <- rowSums(sapply(1:n, log_choose, n=n, moments_expectations=moments_expectations_MutH))
plot(x = microMA_MutH$time/60,
y = E_nt,
xlab = "Time (hr)",
main = paste("E_", n, "(t)", sep = ""))
}
par(mfrow = c(2,5))
for (n in 1:10){
E_nt <- rowSums(sapply(1:n, log_choose, n=n, moments_expectations=moments_expectations_MutH))
plot(x = head(microMA_MutH$time/60, 600),
y = head(E_nt, 600),
xlab = "Time (hr)",
main = paste("E_", n, "(t)", sep = ""))
}
microMA_WT_growthRates <- microMA_WT[seq(3, dim(microMA_WT)[2], 3)]
k_values <- 1:10
moments_expectations_WT <- data.frame(sapply(k_values, moment_expectation, dataset=microMA_WT_growthRates))
names(moments_expectations_WT) <- paste("k.", k_values, sep = "")
head(moments_expectations_WT)
dim(microMA_WT_growthRates)
par(mfrow = c(2,5))
for (n in 1:10){
E_nt <- rowSums(sapply(1:n, log_choose, n=n, moments_expectations=moments_expectations_WT))
plot(x = microMA_WT$time/60,
y = E_nt,
xlab = "Time (hr)",
main = paste("E_", n, "(t)", sep = ""))
}
par(mfrow = c(2,5))
for (n in 1:10){
E_nt <- rowSums(sapply(1:n, log_choose, n=n, moments_expectations=moments_expectations_WT))
plot(x = head(microMA_WT$time/60, 600),
y = head(E_nt, 600),
xlab = "Time (hr)",
main = paste("E_", n, "(t)", sep = ""))
}
hist(as.numeric(microMA_MutH_growthRates[1,]), breaks=50)
hist(as.numeric(microMA_MutH_growthRates[1,]), breaks=50)
hist(as.numeric(microMA_MutH_growthRates[500,]), breaks=50)
hist(as.numeric(microMA_MutH_growthRates[1000,]), breaks=50)
hist(as.numeric(microMA_MutH_growthRates[1,]), xlim = c(-1,1), breaks=50)
hist(as.numeric(microMA_MutH_growthRates[500,]), xlim = c(-1,1), breaks=50)
hist(as.numeric(microMA_MutH_growthRates[1000,]), xlim = c(-1,1), breaks=50)
dim(microMA_MutH_growthRates)
par(mfrow=c(5,1))
hist(as.numeric(microMA_MutH_growthRates[1,]), xlim = c(-0.1,1), breaks=50)
par(mfrow=c(5,1))
hist(as.numeric(microMA_MutH_growthRates[1,]), xlim = c(-0.1,1), breaks=50)
hist(as.numeric(microMA_MutH_growthRates[250,]), xlim = c(-0.1,1), breaks=50)
hist(as.numeric(microMA_MutH_growthRates[500,]), xlim = c(-0.1,1), breaks=50)
hist(as.numeric(microMA_MutH_growthRates[750,]), xlim = c(-0.1,1), breaks=50)
hist(as.numeric(microMA_MutH_growthRates[1000,]), xlim = c(-0.11,1), breaks=50)
# par(mfrow=c(5,1))
hist(as.numeric(microMA_MutH_growthRates[1,]), xlim = c(-0.1,1), breaks=50)
hist(as.numeric(microMA_MutH_growthRates[250,]), xlim = c(-0.1,1), breaks=50)
hist(as.numeric(microMA_MutH_growthRates[500,]), xlim = c(-0.1,1), breaks=50)
hist(as.numeric(microMA_MutH_growthRates[750,]), xlim = c(-0.1,1), breaks=50)
hist(as.numeric(microMA_MutH_growthRates[1000,]), xlim = c(-0.11,1), breaks=50)
microMA_MutH_growthRates==0
which(microMA_MutH_growthRates==0)
which(rowSums(microMA_MutH_growthRates)==0)
rowSums(microMA_MutH_growthRates)
tail(microMA_MutH_growthRates, 1)
which(tail(microMA_MutH_growthRates, 1)==0)
which(tail(microMA_MutH_growthRates, 1)!=0)
# par(mfrow=c(5,1))
hist(as.numeric(microMA_MutH_growthRates[1,which(tail(microMA_MutH_growthRates, 1)!=0)]), xlim = c(-0.1,1), breaks=50)
hist(as.numeric(microMA_MutH_growthRates[250,which(tail(microMA_MutH_growthRates, 1)!=0)]), xlim = c(-0.1,1), breaks=50)
hist(as.numeric(microMA_MutH_growthRates[500,which(tail(microMA_MutH_growthRates, 1)!=0)]), xlim = c(-0.1,1), breaks=50)
hist(as.numeric(microMA_MutH_growthRates[750,which(tail(microMA_MutH_growthRates, 1)!=0)]), xlim = c(-0.1,1), breaks=50)
hist(as.numeric(microMA_MutH_growthRates[1000,which(tail(microMA_MutH_growthRates, 1)!=0)]), xlim = c(-0.11,1), breaks=50)
which(tail(microMA_MutH_growthRates, 1)<0)
microMA_MutH_growthRates[1000,10]
# par(mfrow=c(5,1))
zero <- which(tail(microMA_MutH_growthRates, 1)>0.001)
hist(as.numeric(microMA_MutH_growthRates[1,zero]), xlim = c(-0.1,1), breaks=50)
hist(as.numeric(microMA_MutH_growthRates[250,zero]), xlim = c(-0.1,1), breaks=50)
hist(as.numeric(microMA_MutH_growthRates[500,zero]), xlim = c(-0.1,1), breaks=50)
hist(as.numeric(microMA_MutH_growthRates[750,zero]), xlim = c(-0.1,1), breaks=50)
hist(as.numeric(microMA_MutH_growthRates[1000,zero]), xlim = c(-0.11,1), breaks=50)
# par(mfrow=c(5,1))
zero <- which(tail(microMA_MutH_growthRates, 1)>0.001)
hist(as.numeric(microMA_MutH_growthRates[1,zero]), xlim = c(0,0.1), breaks=50)
hist(as.numeric(microMA_MutH_growthRates[250,zero]), xlim = c(0,0.1), breaks=50)
hist(as.numeric(microMA_MutH_growthRates[500,zero]), xlim = c(0,0.1), breaks=50)
hist(as.numeric(microMA_MutH_growthRates[750,zero]), xlim = c(0,0.1), breaks=50)
hist(as.numeric(microMA_MutH_growthRates[1000,zero]), xlim = c(0,0.1), breaks=50)
# par(mfrow=c(5,1))
zero <- which(tail(microMA_MutH_growthRates, 1)>0.001)
hist(as.numeric(microMA_MutH_growthRates[1,zero]), xlim = c(0,0.1), breaks=100)
hist(as.numeric(microMA_MutH_growthRates[250,zero]), xlim = c(0,0.1), breaks=50)
hist(as.numeric(microMA_MutH_growthRates[500,zero]), xlim = c(0,0.1), breaks=50)
hist(as.numeric(microMA_MutH_growthRates[750,zero]), xlim = c(0,0.1), breaks=50)
hist(as.numeric(microMA_MutH_growthRates[1000,zero]), xlim = c(0,0.1), breaks=50)
# par(mfrow=c(5,1))
zero <- which(tail(microMA_MutH_growthRates, 1)>0.001)
hist(as.numeric(microMA_MutH_growthRates[1,zero]), xlim = c(0,0.1), breaks=100)
hist(as.numeric(microMA_MutH_growthRates[250,zero]), xlim = c(0,0.1), breaks=50)
hist(as.numeric(microMA_MutH_growthRates[500,zero]), xlim = c(0,0.1), breaks=50)
hist(as.numeric(microMA_MutH_growthRates[750,zero]), xlim = c(0,0.1), breaks=50)
hist(as.numeric(microMA_MutH_growthRates[1000,zero]), xlim = c(0,0.1), breaks=50)
1:10*100
# par(mfrow=c(5,1))
zero <- which(tail(microMA_MutH_growthRates, 1)>0.001)
for (t in 1:10*100){
hist(as.numeric(microMA_MutH_growthRates[t,zero]), xlim = c(0,0.1), breaks=100)
}
# par(mfrow=c(5,1))
zero <- which(tail(microMA_MutH_growthRates, 1)>0.001)
for (t in 1:100*10){
hist(as.numeric(microMA_MutH_growthRates[t,zero]), xlim = c(0,0.1), breaks=100)
}
# par(mfrow=c(5,1))
zero <- which(tail(microMA_MutH_growthRates, 1)>0.005)
for (t in 1:20*50){
hist(as.numeric(microMA_MutH_growthRates[t,zero]), xlim = c(0,0.1), breaks=50)
}
# par(mfrow=c(5,1))
zero <- which(tail(microMA_MutH_growthRates, 1)>0.005)
for (t in 1:20*50){
hist(as.numeric(microMA_MutH_growthRates[t,zero]), xlim = c(0,0.1), breaks=50, probability = T)
}
# par(mfrow=c(5,1))
zero <- which(tail(microMA_MutH_growthRates, 1)>0.005)
for (t in 1:20*50){
hist(as.numeric(microMA_MutH_growthRates[t,zero]), xlim = c(0,0.1), breaks=50, freq = T)
}
# par(mfrow=c(5,1))
zero <- which(tail(microMA_MutH_growthRates, 1)>0.005)
for (t in 1:20*50){
hist(as.numeric(microMA_MutH_growthRates[t,zero]), xlim = c(0,0.1), breaks=50, freq = F)
}
# par(mfrow=c(5,1))
zero <- which(tail(microMA_MutH_growthRates, 1)>0.005)
for (t in 1:20*50){
hist(as.numeric(microMA_MutH_growthRates[t,zero]), xlim = c(0,0.1), breaks=50, ylim=c(0,150))
}
# par(mfrow=c(5,1))
zero <- which(tail(microMA_MutH_growthRates, 1)>0.005)
for (t in 1:20*50){
hist(as.numeric(microMA_MutH_growthRates[t,zero]), xlim = c(0,0.1), breaks=50, ylim=c(0,120))
}
# par(mfrow=c(5,1))
zero <- which(tail(microMA_MutH_growthRates, 1)>0.005)
for (t in 1:20*50){
hist(as.numeric(microMA_MutH_growthRates[t,zero]), xlim = c(0,0.1), ylim=c(0,120))
}
install.packages('IRkernel')
print(1)
install.packages('IRkernel')
IRkernel::installspec(user = FALSE)
jupyter kernelspec --version
R.home()
library("ggplot2")
install.packages("ggplot2")
install.packages("formatR")
